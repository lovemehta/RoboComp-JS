//******************************************************************
// 
//  Generated by IDSL to IDL Translator
//  
//  File name: MSKSilhouette.idl
//  Source: MSKSilhouette.idsl
//  
//******************************************************************   
#ifndef ROBOCOMPMSKSILHOUETTE_ICE
#define ROBOCOMPMSKSILHOUETTE_ICE

#include <MSKCommon.ice>

module RoboCompMSKSilhouette{
	struct Pose3D{
		float rx;
					float ry;
					float rz;
				};
	dictionary<string, Pose3D>JointList;
	enum shapeState{isShape, noShape};
	enum shapeType{Shape, Body};
	struct TBody{
		JointList joints;
		shapeType type;
		RoboCompMSKCommon::Id identifier;
	};
	dictionary<int, TBody>BodyList;
	struct BodyListData{
		BodyList bodyl;
	};
	struct NumBodiesData{
		int num;
	};
	struct ImgDepthData{
		RoboCompMSKCommon::TDepth image;
	};
	struct JointData{
		string nameJoint;
		RoboCompMSKCommon::Id identifier;
	};

	interface MSKSilhouette{
		void  getBodyList(out BodyListData body);
		void  getRTMatrixList(RoboCompMSKCommon::Id identifier, out JointList jointl);
		void  getBodyState(RoboCompMSKCommon::Id identifier, out shapeType shapet);
		void  getNumBodies(out NumBodiesData nbodies);
		void  getBody(RoboCompMSKCommon::Id identifier, out TBody body);
		void  getJointPixelPosition(JointData data, out RoboCompMSKCommon::Position2D pxy);
		void  pixelRGB2Dto3D(RoboCompMSKCommon::Position2D pxy, out RoboCompMSKCommon::Position2D traslation);
		void  getRGB(out RoboCompMSKCommon::TRGB imgRGB);
		void  getDepth(out ImgDepthData imgDepth);
		void  getRGBD(out RoboCompMSKCommon::TRGBD imgRGBD);
	};
};
  
#endif