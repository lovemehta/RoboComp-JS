module RoboCompOmniRobot
{
  exception HardwareFailedException { string what; };

  struct TMechParams
  {
    float temp;
    string device;
    string handler;
    float maxVelAdv;
    float maxVelRot;
  };

  struct TBaseState
  {
    float x;
    float correctedX;
    float z;
    float correctedZ;
    float alpha;
    float correctedAlpha;

    float advVx;
    float advVz;
    float rotV;
    bool isMoving;
  };

  interface OmniRobot
  {
    void getBaseState(out TBaseState state) throws HardwareFailedException;
    void getBasePose(out int x, out int z, out float alpha) throws HardwareFailedException;
    void setSpeedBase(float advx, float advz, float rot) throws HardwareFailedException;
    void stopBase() throws HardwareFailedException;
    void resetOdometer() throws HardwareFailedException;
    void setOdometer(TBaseState state) throws HardwareFailedException;
    void setOdometerPose(int x, int z, float alpha) throws HardwareFailedException;
    void correctOdometer(int x, int z, float alpha) throws HardwareFailedException;
  };
};


